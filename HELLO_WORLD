Директива #include в C++ используется для включения содержимого файла в программу во время компиляции. Это мощный инструмент для организации кода, разделения его на отдельные модули и повторного использования.

Синтаксис использования:

Использование двойных кавычек (""). Препроцессор получает доступ к текущей директории, в которой находится исходный файл. Этот тип в основном используется для доступа к любым заголовочным файлам пользовательской программы или пользовательским файлам. Пример: #include "user-defined_file".
Использование угловых скобок (<>). При импорте файла с использованием угловых скобок препроцессор использует предопределённый путь к каталогу для доступа к файлу. В основном он используется для доступа к системным заголовочным файлам, расположенным в стандартных системных каталогах. Пример: #include <header_file>.
Для защиты от многократного включения используется препроцессорная директива #pragma once или стандартный метод с использованием конструкции #ifndef, #define и #endif.

***

Директива «using namespace std;» в C++ позволяет использовать все идентификаторы из пространства имён std без указания префикса std::.
Это упрощает чтение и понимание кода, а также уменьшает объём написанного текста.
Однако при использовании директивы «using namespace std;» необходимо быть осторожным, так как это может привести к конфликтам имён и ошибкам компиляции. Например, если есть своя функция с именем cout, то при использовании директивы «using namespace std;» 
возникнет конфликт и компилятор не сможет определить, какую именно функцию cout использовать. Поэтому рекомендуется использовать директиву «using namespace std;» только внутри функций, а не в глобальной области видимости. 

***

Int main в C++ — это ключевая функция приложений, написанных на C++. С неё начинается запуск программы.
Это минимальная программа, которая не принимает никаких аргументов. У функции указан тип возвращаемого значения int (целое число). Если программа завершается правильно, результатом возврата станет 0, в противном случае программное обеспечение завершилось с ошибками.

***

Cout в C++ — это стандартный выходной поток, который позволяет выводить данные на экран консоли.
Расшифровывается как character output, то есть «символьный вывод».

***

endl в C++ — это оператор для перевода текста на новую строку. Он указывает, что строка закончилась, и следующий текст, который будет отображён в консоле, будет выводиться с новой строки.
Также endl принудительно очищает буфер вывода, и строка выводится сразу же вслед за этой командой.

***

Return в C++ — это оператор, который завершает выполнение функции и возвращает элемент управления в вызывающую функцию (или в операционную систему при передаче управления из функции main).
Выполнение возобновляется в вызывающей функции в точке сразу после вызова.
